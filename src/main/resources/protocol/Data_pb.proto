syntax = "proto2";
package Data_pb;
option java_package = "com.leocool.sgland.protocol";
option java_outer_classname = "Data";

message AccountInfo
{
    optional string channel = 1;
    optional int32 rid = 2;
    optional string uid = 3;
    optional string cid = 4;
    optional string gcid = 5;
	optional int32 sid = 6;
	optional string social_id = 7;
}

message ReportUserInfo
{
	optional AccountInfo report = 1;
	optional AccountInfo be_report = 2;
}

message ActivityBonus
{
    optional int64 id = 1;
    optional int32 info_id = 2;
    optional int64 timestamp = 3;
    optional string title = 4;
    optional Extra extra = 5;
    optional bool claimed = 6;
	optional UserInfo send_info = 7;
	optional bool is_admin = 8;
}

message GlodTimeBounds
{
repeated Data_pb.Resource resource = 1;
optional bool is_success = 2;
}
message AttachData
{
    optional PlayerProp prop = 1;
    optional PlayerShop shop = 2;
    optional PlayerBonus bonus = 3;
	optional PlayerIap iap_type = 4;
    optional PlayerCopy copy = 5;
    optional PlayerActivity activity = 6;
    repeated Character characters = 7;
    optional PlayerLadder ladder = 8;
	optional PlayerDuelCity city = 9;
	optional PlayerKingWar king = 10;
	optional PlayerManager manage = 11;
}
message GlodTimeOnlineBonus
{
	optional int32 info_id = 1;
	optional bool success = 2;
}
message PlayerDuelCity
{
    optional bool has_ticket = 1;
    optional int32 char_id = 2;
    optional int32 step = 3;
    repeated int32 pool = 4;
    repeated Resource cards = 5;
    optional int32 daily_gold = 6;
    optional int32 daily_ingot = 7;
    repeated int32 chars = 8;
    repeated int32 selected = 9;
    optional int64 room_id = 10;
    optional int64 life_time = 11;
    repeated Resource extra_cards = 12;
    optional int64 start_time = 13;
}

message BattleResult
{
    optional int32 type = 1;
    repeated bool task_result = 2;
    optional int32 damage = 3;
    optional int32 hp = 4;
    repeated int32 assistant_damage = 5;
    optional int32 atk_score = 6;
    optional int32 def_score = 7;
    optional int32 round = 8;
    optional string log = 9;
    repeated int32 attacker_stat = 10;
    repeated int32 defender_stat = 11;
    optional bool ai_nomal = 12;
}

message BanBattle
{
    optional int32 type =1;
    optional int64 startTime=2;
    optional int64 endTime=3;
    optional int64 user_id=4;
    optional bool is_global=5;
}

message PlayerManager
{
	repeated BanBattle battle_forbid=1;
	optional Data_pb.WorldReportInfoResp report_info = 2;
	optional int64 online_time = 3;
}

message BattleSpot
{
    optional int32 type = 1;
    optional TroopData player_troop = 6;
    optional TroopData opponent_troop = 7;
    repeated int32 player_used_cards = 8;
    repeated int32 opponent_used_cards = 9;
    repeated int32 random_seq = 10;
    optional int32 level_id = 11;
    optional int32 copy_id = 12;
    optional bool is_op_online = 13;
    optional bool is_op_skip = 14;
    optional bool is_attacker = 15;
    optional Resource player_pvp_soldier = 16;
    optional Resource opponent_pvp_soldier = 17;
    optional int32 boss_id = 18;
    optional int64 timestamp = 19;
    optional int32 npc_type = 20;
    optional bool is_watcher = 21 [default = false];
    optional int64 player_remain_time = 22;
    optional int64 opponent_remain_time = 23;
	optional WorldReportInfoResp report_info = 24;

}
message WorldReportInfoResp
{
	optional int32 num = 1;
	optional int32 score = 2;
	optional int64 report = 3;
	optional int64 ban_time = 4;
	optional int64 last_login = 5;
	optional int32 battle_max = 6;
	optional int32 online_max = 7;
	optional int32 buy_count = 8;
	optional int32 be_report = 9;
}

message Bonus
{
    optional int32 cid = 1;
    optional int32 value = 2;
}

message Bundle
{
    optional int32 id = 1;
    optional int32 info_id = 2;
    optional Resource product = 3;
    optional bool is_available = 4;
    optional int32 count = 5;
	repeated Resource resources = 6;
	optional bool isHide = 7;
	optional string date = 8;
	optional int32 type= 9;
	optional int32 cardId= 10;
	optional int32 fragment = 11;
    optional int32 times = 12;
    optional int32 days = 13;
    optional int32 limit =14;
}

message BundleEx
{
    optional int32 id = 1;
    optional Resource product = 2;
    optional Resource cost = 3;
    optional bool is_available = 4;
}

message BundleLimit
{
    optional int32 bundle_id = 1;
    optional int32 limit = 2;
}

message CardBox
{
    optional int32 box_id = 1;
    repeated int32 info_id = 2;
}

message CardBoxCardInfo
{
    optional int32 info_id = 1;
    optional int32 get_num = 2;
    optional int32 remain_num = 3;
}

message CardLevel
{
    optional int32 info_id = 1;
    optional int32 level = 2;
}

message Chapter
{
    optional int32 id = 1;
    repeated Drop drops = 2;
}

message Character
{
    optional int32 id = 1;
    optional int32 exp = 2;
    optional int32 level = 3;
    optional int32 avatar = 4;
}

message Characters
{
    repeated Character character = 1;
}

message Chest
{
    optional int32 id = 1;
    optional bool opened = 2;
}

message City
{
    optional int32 info_id = 1;
    optional int32 chapter = 2;
    optional int32 owner_type = 3;
    optional int64 owner_id = 4;
    repeated int32 sweep_count = 5;
    optional int64 timestamp = 6;
    repeated int32 reset_count = 7;
}

message Contestant
{
    optional int64 id = 1;
    optional UserInfo info = 2;
    optional int32 win = 3;
}

message Copy
{
    optional int32 id = 1;
    optional int32 value = 2;
    optional int32 score = 3;
}

message Crown
{
    optional int32 info_id = 1;
    optional int32 num = 2;
}

message Drop
{
    optional int32 id = 1;
    optional int32 count = 2;
    optional int32 drop = 3;
}

message ExpeditionExBoss
{
    optional TroopData boss = 1;
    optional int32 chanllenge_count = 2;
    optional int32 random_position = 3;
    optional int64 next_refresh = 4;
}

message ExpeditionExNPC
{
    optional TroopData troop_data = 1;
    optional int32 level = 2;
    optional int32 random_position = 3;
    optional int64 next_refresh = 4;
    optional int32 chanllenge_count = 5;
}

message Extra
{
    repeated Resource resources = 1;
}

message FullTeam
{
    optional int32 rid = 1;
    optional int64 id = 2;
    optional string name = 3;
    optional int32 avatar = 4;
    repeated int64 user_id = 5;
    repeated Troop troop = 6;
}

message Guard
{
    optional int32 info_id = 1;
    optional int64 timestamp = 2;
    optional int64 span = 3;
}

message GuardSlot
{
    optional int32 id = 1;
    optional int32 level = 2;
    optional Guard guard = 3;
}

message LoginInfo
{
    optional int32 rid = 1;
    optional string name = 2;
    optional int32 level = 3;
    optional int32 avatar = 4;
    optional int32 vip = 5;
    optional int64 last_login = 6;
    optional int32 avatar_frame = 7;
	optional string union_name = 8;
}

message Match
{
    optional int32 id = 1;
    optional Contestant creator = 2;
    optional Contestant playerO = 3;
    optional Contestant playerA = 4;
    optional Contestant playerB = 5;
    optional int64 user_id = 6;
}

message MatchInfo
{
    optional int32 id = 1;
    optional string address = 2;
	optional int64 user_id = 3;
}

message ParyerLotteryDL
{
    repeated CardBox card_box = 1;
}

message PkgGuard
{
    optional int32 pkg_id = 1;
    optional int64 timestamp = 2;
    optional int64 span = 3;
}

message PkgGuardSlot
{
    optional int32 id = 1;
    optional PkgGuard pkg_guard = 3;
}

message PlayerActivity
{
    optional int32 login = 1;
    optional int32 charge = 2;
    optional int32 ghost = 3;
    optional int32 consume = 4;
    optional int64 last_login = 5;
    optional int64 last_charge = 6;
    optional int64 last_ghost = 7;
    optional int64 last_consume = 8;
    optional int32 rebate = 9;
    optional int64 last_rebate = 10;
    optional PlayerBonus bonus = 11;
    optional int64 last_bonus = 12;
    repeated Resource bundles = 13;
    optional int64 last_market = 14;
    optional int32 charge_ex = 15;
    optional int64 last_charge_ex = 16;
    optional int64 last_pkg_card = 17;
    optional int64 last_pkg_gift = 18;
    optional int64 last_pkg_gift_ingot = 19;
    optional int32 zing_card_daily_pay = 20;
    optional int64 fund_package_buy_time = 21;
    optional int32 fund_package_active_point = 22;
    optional int32 fund_package_ladder_cont_win = 23;
	optional int32 super_grow_fund_id = 24;
	optional string super_grow_fund_time = 25;
	optional int32 fund_package_ladder_ex_cont_win = 26;
	optional int32 return_day = 27;
	optional int64 new_year_pay = 28;
	repeated Resource discount_month_card = 29;
    repeated CharTurntable char_turntable = 30;
    repeated CharCardPackage char_card_package = 31;

}

message PlayerBonus
{
    repeated Bonus bonuses = 1;
    repeated int32 claimed = 2;
    repeated Resource items = 3;
    repeated YybGift gifts = 4;
    optional int32 task_reset_count = 5;
	repeated int32 is_claim_vip_bonus = 6;
	optional int32 claim_vip_bonus_month = 7;
	optional int32 old_vip_level = 8;
	optional int32 old_vip_exp = 9;
	optional int64 signin_fund_last_time = 10;
}

message ExtraPkg
{
   optional int32 char_id =1;
   repeated Resource card =2;
}

message PlayerIap
{
	repeated Resource buy_type = 1;
	repeated IapTypeTime type_and_time = 2;
	repeated Resource vip_month_bonus = 3;
}

message IapTypeTime
{
	optional int32 type = 1;
	optional int64 buy_time = 2;
}

message PlayerCard
{
    repeated Resource cards = 1;
    repeated Troop troops = 2;
    repeated CardLevel levels = 3;
    repeated int32 unlocked = 4;
    repeated GuardSlot slots = 5;
    repeated Skin skin = 6;
    repeated ExtraPkg pkg = 7;
	repeated Resource card_debris = 8;
	repeated ExtraPkg rpkg = 9;
	repeated ResetRoleCardTime reset_role_card_time = 10;
	repeated Skin card_background = 11;
	repeated Skin avatar_box = 12;
	repeated Skin character_skin = 13;
	repeated Skin avatar = 14;
	repeated LendCardInfo lend_cards = 15;
	repeated Resource extend_sr_count = 16;
	repeated Resource extend_count = 17;
}

message ResetRoleCardTime
{
	optional string drop_id = 1;
	optional int64 end_time = 2;
}

message PlayerCharacter
{
    optional int32 char_id = 1;
    repeated Character chars = 2;
}

message PlayerCity
{
    repeated Visit visits = 1;
    repeated Procedure procedures = 2;
    repeated Guard guards = 3;
    optional int64 last_vist = 4;
    optional int64 last_collect_gold = 5;
    optional int64 last_collect_grain = 6;
}

message PlayerCopy
{
    repeated Copy copies = 1;
}

message PlayerDrop
{
    repeated Chapter chapters = 1;
}

message PlayerExpedition
{
    optional int32 chapter = 1;
    repeated Chest chests = 2;
    repeated TroopData troops = 3;
    optional int32 sweep_chapter = 4;
    optional int32 recover_count = 5;
}
message PlayerExpeditionEx
{
    optional int64 last_npc_update_time = 1;
    optional int64 last_boss_update_time = 2;
    optional int64 last_lottery_power_update_time = 3;
    repeated ExpeditionExNPC troops = 4;
    optional ExpeditionExBoss boss = 5;
    optional int32 lottery_power = 6;
    optional int64 next_refresh = 7;
    optional int32 cur_npc = 8;
}

message PlayerLadder
{
    optional bool has_ticket = 1;
    optional int32 char_id = 2;
    optional int32 step = 3;
    repeated int32 pool = 4;
    repeated Resource cards = 5;
    optional int32 win = 6;
    optional int32 lose = 7;
    optional Chest chest = 8;
    repeated int32 chars = 9;
    repeated int32 selected = 10;
    optional int32 daily_win = 11;
	optional int32 daily_continuous_win = 12;
	optional bool sub_type_id = 13;
}
message PlayerKingWar
{
	optional int32 win = 1;
	optional int32 lose = 2;
	optional bool has_ticket = 3;
	optional int32 can_battle = 4;
	optional int32 king_trophy = 5;
	optional int32 betting = 6;
	optional bool  finalist = 7;
}

message PlayerLotteryCount
{
    repeated int32 pkg_id = 1;
    repeated int32 count = 2;
    repeated int32 sr_count = 3;
    optional int32 free_lottery_count = 4;
}

message PlayerProp
{
    repeated Resource props = 1;
    repeated Chest chests = 2;
    repeated string marks = 3;
    repeated Crown crowns = 4;
	repeated Resource day_send_gift = 5;
	repeated Resource count_send_gift = 6;
	repeated Resource day_get_gift = 7;
	repeated Resource count_get_gift = 8;
	repeated Resource gift_box = 9;
	repeated TempCountMap temp_count_map = 10;
	optional int64 last_clean_date = 11;
	optional bool has_clean_week_data = 12;
	optional bool can_clean_week_data = 13;
	optional int64 treasure_last_clear_time = 14;
	repeated int32 use_seal_bottle = 15;
	repeated int32 battle_get_candle = 16;
	optional int64 rose_last_clear_time = 17;
    repeated NewProps new_props = 18;
}

message TempCountMap
{
	optional int32 temp_id = 1;
	repeated Resource data = 2;
}


message PlayerShop
{
    optional int64 next_refresh = 2;
    repeated Bundle bundles = 3;
    repeated Bundle pvp_bundles = 4;
    optional int64 last_open = 5;
    repeated BundleEx myst_bundles = 6;
    repeated Bundle ladder_bundles = 7;
    repeated Resource gifts = 8;
    optional int64 last_gift = 9;
    repeated int32 rare_bundles = 10;
    repeated int32 legend_bundles = 11;
    repeated BundleLimit exchange_prop_limit = 12;
	repeated int32 seal_bundles = 13;
	repeated DiamondBundles diamond_bundles = 14;
	repeated int32 season_bundles = 15;
	repeated int32 prop_card_bundles = 16;
	repeated int32 relic_bundles = 17;
    repeated int32 login_seven_days = 18;
	repeated int32 kill_boss = 19;
	repeated int32 dead_battle_bundles = 20;
	repeated int32 reset_kill_boss = 21;
	repeated int32 buy_head = 22;
	repeated MagicShopWeight magic_shop_weight = 23;
	repeated MagicShopExchange magic_shop_exchange = 24;
	repeated MagicShopItem magic_shop_item = 25;
	optional int32 magic_shop_refresh_count = 26;
	optional int64 magic_shop_last_refresh_time = 27;
	optional int32 magic_shop_level = 28;
	optional int32 magic_shop_score = 29;
	repeated int32 kill_boss_log = 30;
	repeated int32 accumulative_recharge = 31;
	repeated int32 buy_medal_shop = 32;
	optional int32 buy_credit_score_count = 33;
	optional AnniversaryTurntable anniversary_turntable = 34;
	optional AnniversaryTurntable union_turntable = 35;
	repeated int32 recover_info_id = 36;
	repeated RecoveryPrice recovery_price = 37;
	repeated DebrisRecovery debris_recovery = 38;
    repeated Bundle ladder_ex_bundles = 43;
    repeated Bundle card_adavnce_bundles = 44;
    repeated Bundle rare_product_bundles = 45;
    repeated Bundle discount_bundles = 46;
    repeated Bundle soul_bundles = 47;
}
message CardRecoverNotice
{
	repeated int32 recover_info_id = 1;
	repeated RecoveryPrice recovery_price = 2;
	repeated DebrisRecovery debris_recovery = 3;
}
message RecoveryPrice
{
	optional int32 info_id = 1;
	repeated int32 price = 2;
}
message DebrisRecovery
{
	optional int32 info_id = 1;
	optional int32 price = 2;
}
message DiamondBundles
{
	optional int32 type = 1;
	repeated int32 num = 2;
}

message GlodTimeNum
{
	optional int32 type = 1;
	optional int32 num = 2;
}
message PlayerUnion
{
    optional int64 next_refresh = 1;
    repeated Bundle bundles = 2;
    repeated Resource cards = 4;
    optional int64 last_rent = 5;
    repeated int64 rented = 6;
    repeated Resource bonuses = 7;
    repeated Tech techs = 8;
    optional TeamInfo team_info = 9;
}

message PlayerWorld
{
    repeated int32 cur_levels = 1;
	repeated Explores explores = 2;
	optional int32 daily_pvp_times = 3;
	optional int32 daily_explore_times = 4;
	optional int32 last_used_ball_id = 5;
}

message Explores
{
	optional int32 daily_explore_times = 1;
	optional int32 level = 2;
	optional int32 monster = 3;
	repeated int32 meet_records = 4;
	optional int64 disappear_time = 5;
	optional int32 cur_catch_times = 6;
	optional int32 max_catch_times = 7;
	repeated CatchRecords catch_records = 8;
    optional int32 daily_pvp_times = 9;
}

message CatchRecords{
    optional int32 info_id = 1;
    optional int32 num = 2;
}

message Procedure
{
    optional int32 id = 1;
    optional int32 info_id = 2;
    repeated int32 heros = 3;
    optional int64 timestamp = 4;
}

message Resource
{
    optional int32 info_id = 1;
    optional int32 num = 2;
}

message Skin
{
    optional int32 info_id = 1;
    optional int32 default_skin = 2;
    repeated int32 skin_id = 3;
    repeated int64 expire = 4;
}

message SkinInUse
{
    optional int32 info_id = 1;
    optional int32 skin_id = 2;
}

message Team
{
    optional int32 rid = 1;
    optional int64 id = 2;
    optional string name = 3;
    optional int32 avatar = 4;
    repeated UserInfo user_info = 5;
    optional bool masswar_started = 6;
    optional int32 mass_war_score = 7;
}

message TeamInWorld
{
    optional int32 rid = 1;
    optional int64 id = 2;
    optional string name = 3;
    optional int32 avatar = 4;
    repeated AccountInfo account_info = 5;
}

message TeamInfo
{
    optional int64 id = 1;
    optional int32 score = 2;
    optional int64 score_update_time = 3;
}

message TeamList
{
    repeated Team teams = 1;
}

message Tech
{
    optional int32 id = 1;
    optional int32 level = 2;
}

message Troop
{
    repeated Resource troop_item = 1;
    optional string name = 2;
}

message TroopData
{
    optional int64 id = 1;
    optional int32 hp = 2;
    repeated Resource cards = 3;
    optional UserInfo info = 4;
    repeated int32 assistant = 5;
    repeated CardLevel levels = 6;
    repeated SkinInUse skins = 7;
}

message UnionInfo
{
    optional int64 id = 1;
    optional string name = 2;
    optional int32 avatar = 3;
    optional int32 type = 4;
    optional string tag = 5;
    optional int32 level = 6;
    optional int32 member = 7;
    optional string announcement = 8;
    optional int32 required_level = 9;
	optional string president_name = 10;
	optional int32 President_level = 11;
}
message BossShopCardInfo
{
	optional int32 card_id =1;
	optional int32 value =2;
	optional bool  calimed =3;
	optional int32 auction_num =4;
}

message UnionMini
{
    optional UnionInfo info = 1;
    optional PlayerUnion data = 2;
    repeated Tech techs = 3;
	optional UnionTaskInfoList union_task_list = 4;
}
// 公共联合挂机任务列表
message UnionTaskInfoList
{
	optional int32 task_limit = 1;                 // 今天已经完成的任务数量
	repeated UnionTaskInfo union_task_info = 2;    // 所有的任务信息, 包括已经完成的
}
// 公共联合挂机任务信息
message UnionTaskInfo
{
	optional int32 id = 1;             // 任务ID, 对应union_task的id
	optional UnionTask union_task = 2; // 任务信息
}
message UnionTask
{
	optional int32 id = 1;             // 任务ID, 对应union_task的id
	optional int64 start_time = 2;     // 任务开始时间, 若未开始则为0
	optional int64 sub_time = 3;       // 任务提交时间, 若未提交时则为0
	optional int32 my_card_id = 4;     // 自己的卡的infoID
	optional int32 share_card_id = 5;  // 借的别人的卡的infoID
	optional int64 owner_id = 6;       // 被借的卡的人的玩家ID
	optional bool is_finish = 7;       // 任务是否已经完成(可以领取)
    optional bool is_taken = 8;        // 任务是否已经领取
}

message UserInfo
{
    optional int64 id = 1;
    optional string name = 2;
    optional int32 level = 3;
    optional int32 trophy = 4;
    optional int32 avatar = 5;
    optional int64 union_id = 6;
    optional string union_name = 7;
    optional int32 union_title = 8;
    optional int32 vip = 9;
    optional int64 last_login = 10;
    optional string union_tag = 11;
    optional int32 union_avatar = 12;
    optional int32 card_back = 13;
    optional int32 avatar_frame = 14;
    optional int32 rid = 15;
    optional bool is_npc = 16 [default = false];
    optional string code = 17;
    optional Crown crown = 18;
    optional int32 avatar_frame_count = 19;
    optional int32 mass_war_score = 20;
	optional int32 dark_energy = 22;
	optional int32 trophy_ex = 23;
	optional int32 sid = 24;
	optional int32 badge = 25;
}
message BossShopInfoData
{
	optional int32 card_id =1;
	optional int32 buy_rid =2;
	optional int32 bid_rid =3;
	optional int32 buy_value =4;
	optional int32 bid_value =5;
	optional string buy_time =6;
	optional string bid_time =7;
	optional string buy_name =8;
	optional string bid_name =9;
}
message Visit
{
    optional int32 id = 1;
    optional int32 info_id = 2;
    optional int32 count = 3;
    optional int64 timestamp = 4;
}
message YybGift
{
    optional int32 bonus_id = 1;
    optional int64 timestamp = 2;
}
message PaymentActivity
{
    optional int32 id = 1;
    optional string user_activity_data = 2;
	optional string start_time = 3;
	optional string end_time = 4;
}
message XlsActivity
{
    optional int32 id = 1;
    optional string user_activity_data = 2;
	optional string start_time = 3;
	optional string end_time = 4;
}
message Activity
{
    optional int32 id = 1;
    optional string activity_name = 2;
	optional string activity_data = 3;
	optional string activity_desc = 4;
	optional string activity_start_time = 5;
	optional string activity_end_time = 6;
	optional int32 activity_state = 7;
	optional int32 activity_type = 8;
	optional string activity_update_time = 9;
}
message BetInfo
{
	optional int64 selected_user_id = 1;
	optional string name = 2;
	optional int32 num = 3;
}
message AwardActivity
{
	optional int32 id = 1;
	optional bool claimed = 2;
	optional int64 num = 3;
}

message SeasonBetInfo
{
	optional int64 select_user_id = 1;
	optional string select_user_name = 2;
	optional int32 select_user_win = 3;
	optional int64 opp_user_id = 4;
	optional string opp_user_name = 5;
	optional int32 opp_user_win = 6;
}
message SeasonGroupInfo
{
	optional SeasonGroup season_group_32 = 1;
	optional SeasonGroup season_group_16 = 2;
	optional SeasonGroup season_group_8 = 3;
	optional SeasonGroup season_group_4 = 4;
	optional SeasonGroup season_group_3 = 5;
	optional SeasonGroup season_group_2 = 6;
	optional GroupInfo group_info = 7;
	optional int64 user_id = 8;
	optional SeasonUserInfo rank_1 = 9;
	optional SeasonUserInfo rank_2 = 10;
	optional SeasonUserInfo rank_3 = 11;
}
message SeasonGroup
{
	optional int32 season_group_id = 1;
	repeated GroupInfo group_info = 2;
}
message GroupInfo
{
	optional int32 group_id = 1;
	repeated SeasonUserInfo season_user_info = 2;
	optional int32 strong = 3;
}
message SeasonUserInfo
{
	optional int32 enroll_id = 1;
	optional int64 battle_user_id = 2;
	optional UserInfo user_info = 3;
	optional int32 status = 4;
	optional int32 victory = 5;
	optional int32 opponent_victory = 6;
}
message LockCard
{
	optional Data_pb.LockType lock_type = 1;
	optional int64 time = 2;
}
enum LockType
{
	LOCK = 1;
	UNLOCKING = 2;
	LOCKLESS = 3;
}
message UnLockCard
{
	optional bool result = 1;
	optional int64 time = 2;
}
message MagicShopWeight
{
	optional int32 item_id = 1;
	optional int32 weight = 2;
}
message MagicShopExchange
{
	optional int32 item_id = 1;
	optional int32 num = 2;
}
message MagicShopItem
{
	optional int32 order_id = 1;
	optional int32 item_id = 2;
	optional bool has_buy = 3;
}
message AnniversaryTurntable
{
	optional int32 count =1;
	repeated int32 weight = 2;
}

message RoseSendInfo
{
	optional int64 user_id = 1;
    optional string name = 2;
	optional int32 info_id = 3;
    optional int32 num = 4;
	optional string time = 5;
}

// 出借卡牌信息
message LendCardInfo
{
	optional int32 card_id = 1;        // 卡牌ID
	optional int64 lend_time = 2;      // 出借时间
	optional int64 owner_id = 3;       // 出借者ID
	optional int32 ingot = 4;          // 可获得金币
	optional int32 position = 5;		// 位置
}

message LendShopItemInfo
{
	optional string uu_id = 1;
	optional int32 info_id = 2;
	optional int64 user_id = 3;
	optional int32 duration = 4;
	optional int32 price = 5;
}

message ActivityManage
{
	repeated DynamicActivityParams dynamic_activity = 1;
	repeated ActivityStates activity_states = 2;
	repeated ActivityUnsealings activity_unsealings = 3;
}

message DynamicActivityParams
{
	optional int32 dap_id = 1;
	optional string dap_name = 2;
	optional string dap_desc = 3;
	optional string dap_detail =4;
	optional int32 dap_need_level = 5;
	optional int32 dap_sort_index = 6;
	optional int64 dap_start_time = 7;
	optional string dap_segments_per_week = 8;
	optional string dap_segments_per_day = 9;
	optional int64 dap_end_time = 10;
	optional int32 dap_clasz = 11;
	optional string dap_data = 12;
	optional int32 dap_state = 13;
	optional int64 dap_update_time = 14;
}

message ActivityStates
{
	optional int32 as_id = 1;
	optional int32 as_activity_id = 2;
	optional int32 as_player_id = 3;
	optional int32 as_state = 4;
	optional string as_data = 5;
	optional int64 as_reset_time = 6;
}

message ActivityUnsealings
{
	optional int32 au_id = 1;
	optional int32 au_activity_id = 2;
	optional int32 au_camp_id = 3;
	optional int32 au_state = 4;
	optional int64 au_update_time = 5;
	optional int32 au_unseal_count = 6;
	optional string au_data = 7;
}

message NewProps
{
    optional int32 info_id = 1;
    optional int32 count = 2;
}

message CharTurntable
{
    optional int64 end_time = 1;        //结束时间(没有则为0)
    optional int32 character_id = 2;    //角色ID
    optional bool is_free = 3;          //是否拥有免费机会
    optional int32 count = 4;           //已使用钻石摇奖的次数
    repeated Resource resource = 5;     //已经摇到的奖
    optional int32 level = 6;           //达成时等级
}

message CharCardPackage
{
    optional int64 end_time = 1;        //结束时间(没有则为0)
    optional int32 level = 2;           //等级
    optional int32 count = 3;           //购买状态
    optional int32 bonus_id = 4;
    optional int32 cid = 5;
}

message PlayCharTurntableResp
{
    optional CharTurntable char_turntable = 1;
    repeated Resource resource = 2;
}
message UpListWinner					//新服冲榜，每天排行
{
	optional int32 days = 1;
	repeated Winner rank = 2;
}
message Winner
{
	optional string name = 1;
	optional int32 rank = 2;
}