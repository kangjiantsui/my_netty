/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var SglMsgType_pb_pb = require('./SglMsgType_pb_pb.js');
goog.exportSymbol('proto.SglMsg_pb.ApplyStatus', null, global);
goog.exportSymbol('proto.SglMsg_pb.FocusStatus', null, global);
goog.exportSymbol('proto.SglMsg_pb.InviteStatus', null, global);
goog.exportSymbol('proto.SglMsg_pb.ProtoMsgStatus', null, global);
goog.exportSymbol('proto.SglMsg_pb.SglReqMsg', null, global);
goog.exportSymbol('proto.SglMsg_pb.SglRespMsg', null, global);
goog.exportSymbol('proto.SglMsg_pb.SosStatus', null, global);
goog.exportSymbol('proto.SglMsg_pb.UserType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SglMsg_pb.SglReqMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 4, null, null);
};
goog.inherits(proto.SglMsg_pb.SglReqMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.SglMsg_pb.SglReqMsg.displayName = 'proto.SglMsg_pb.SglReqMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SglMsg_pb.SglReqMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.SglMsg_pb.SglReqMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SglMsg_pb.SglReqMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SglMsg_pb.SglReqMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    dt: jspb.Message.getField(msg, 2),
    userId: jspb.Message.getField(msg, 3)
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.SglMsg_pb.SglReqMsg.extensions, proto.SglMsg_pb.SglReqMsg.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SglMsg_pb.SglReqMsg}
 */
proto.SglMsg_pb.SglReqMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SglMsg_pb.SglReqMsg;
  return proto.SglMsg_pb.SglReqMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SglMsg_pb.SglReqMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SglMsg_pb.SglReqMsg}
 */
proto.SglMsg_pb.SglReqMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.SglMsgType_pb.ProtoMsgType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserId(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader, proto.SglMsg_pb.SglReqMsg.extensionsBinary,
        proto.SglMsg_pb.SglReqMsg.prototype.getExtension,
        proto.SglMsg_pb.SglReqMsg.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SglMsg_pb.SglReqMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SglMsg_pb.SglReqMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SglMsg_pb.SglReqMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SglMsg_pb.SglReqMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.SglMsgType_pb.ProtoMsgType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.SglMsg_pb.SglReqMsg.extensionsBinary, proto.SglMsg_pb.SglReqMsg.prototype.getExtension);
};


/**
 * optional SglMsgType_pb.ProtoMsgType type = 1;
 * @return {!proto.SglMsgType_pb.ProtoMsgType}
 */
proto.SglMsg_pb.SglReqMsg.prototype.getType = function() {
  return /** @type {!proto.SglMsgType_pb.ProtoMsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 100));
};


/** @param {!proto.SglMsgType_pb.ProtoMsgType} value */
proto.SglMsg_pb.SglReqMsg.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.SglMsg_pb.SglReqMsg.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SglMsg_pb.SglReqMsg.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 dt = 2;
 * @return {number}
 */
proto.SglMsg_pb.SglReqMsg.prototype.getDt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.SglMsg_pb.SglReqMsg.prototype.setDt = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.SglMsg_pb.SglReqMsg.prototype.clearDt = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SglMsg_pb.SglReqMsg.prototype.hasDt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 user_id = 3;
 * @return {number}
 */
proto.SglMsg_pb.SglReqMsg.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.SglMsg_pb.SglReqMsg.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.SglMsg_pb.SglReqMsg.prototype.clearUserId = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SglMsg_pb.SglReqMsg.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object.<number, jspb.ExtensionFieldInfo>}
 */
proto.SglMsg_pb.SglReqMsg.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object.<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.SglMsg_pb.SglReqMsg.extensionsBinary = {};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SglMsg_pb.SglRespMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 5, null, null);
};
goog.inherits(proto.SglMsg_pb.SglRespMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.SglMsg_pb.SglRespMsg.displayName = 'proto.SglMsg_pb.SglRespMsg';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SglMsg_pb.SglRespMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.SglMsg_pb.SglRespMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SglMsg_pb.SglRespMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SglMsg_pb.SglRespMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    status: jspb.Message.getField(msg, 2),
    error: jspb.Message.getField(msg, 3),
    dt: jspb.Message.getField(msg, 4)
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.SglMsg_pb.SglRespMsg.extensions, proto.SglMsg_pb.SglRespMsg.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SglMsg_pb.SglRespMsg}
 */
proto.SglMsg_pb.SglRespMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SglMsg_pb.SglRespMsg;
  return proto.SglMsg_pb.SglRespMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SglMsg_pb.SglRespMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SglMsg_pb.SglRespMsg}
 */
proto.SglMsg_pb.SglRespMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.SglMsgType_pb.ProtoMsgType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!proto.SglMsg_pb.ProtoMsgStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDt(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader, proto.SglMsg_pb.SglRespMsg.extensionsBinary,
        proto.SglMsg_pb.SglRespMsg.prototype.getExtension,
        proto.SglMsg_pb.SglRespMsg.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SglMsg_pb.SglRespMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SglMsg_pb.SglRespMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SglMsg_pb.SglRespMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SglMsg_pb.SglRespMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.SglMsgType_pb.ProtoMsgType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.SglMsg_pb.ProtoMsgStatus} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.SglMsg_pb.SglRespMsg.extensionsBinary, proto.SglMsg_pb.SglRespMsg.prototype.getExtension);
};


/**
 * optional SglMsgType_pb.ProtoMsgType type = 1;
 * @return {!proto.SglMsgType_pb.ProtoMsgType}
 */
proto.SglMsg_pb.SglRespMsg.prototype.getType = function() {
  return /** @type {!proto.SglMsgType_pb.ProtoMsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 100));
};


/** @param {!proto.SglMsgType_pb.ProtoMsgType} value */
proto.SglMsg_pb.SglRespMsg.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.SglMsg_pb.SglRespMsg.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SglMsg_pb.SglRespMsg.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoMsgStatus status = 2;
 * @return {!proto.SglMsg_pb.ProtoMsgStatus}
 */
proto.SglMsg_pb.SglRespMsg.prototype.getStatus = function() {
  return /** @type {!proto.SglMsg_pb.ProtoMsgStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.SglMsg_pb.ProtoMsgStatus} value */
proto.SglMsg_pb.SglRespMsg.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.SglMsg_pb.SglRespMsg.prototype.clearStatus = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SglMsg_pb.SglRespMsg.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string error = 3;
 * @return {string}
 */
proto.SglMsg_pb.SglRespMsg.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.SglMsg_pb.SglRespMsg.prototype.setError = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.SglMsg_pb.SglRespMsg.prototype.clearError = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SglMsg_pb.SglRespMsg.prototype.hasError = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 dt = 4;
 * @return {number}
 */
proto.SglMsg_pb.SglRespMsg.prototype.getDt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.SglMsg_pb.SglRespMsg.prototype.setDt = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.SglMsg_pb.SglRespMsg.prototype.clearDt = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SglMsg_pb.SglRespMsg.prototype.hasDt = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object.<number, jspb.ExtensionFieldInfo>}
 */
proto.SglMsg_pb.SglRespMsg.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object.<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.SglMsg_pb.SglRespMsg.extensionsBinary = {};

/**
 * @enum {number}
 */
proto.SglMsg_pb.ProtoMsgStatus = {
  PB_STATUS_OK: 0,
  PB_STATUS_AUTHENTICATION_FAIL: 1,
  PB_STATUS_INVALID_ARG: 2,
  PB_STATUS_LOGIN_FAIL: 3,
  PB_STATUS_SERVER_ERROR: 4,
  PB_STATUS_DATA_ERROR: 5,
  PB_STATUS_OPPONENT_NOT_FOUND: 6,
  PB_STATUS_OUT_OF_SYNC: 7,
  PB_STATUS_LOGIN_ELSEWHERE: 8,
  PB_STATUS_USER_OFFLINE: 9,
  PB_STATUS_SERVER_MAINTENANCE: 10,
  PB_STATUS_USER_UNDER_ATTACK: 11,
  PB_STATUS_USER_ONLINE: 12,
  PB_STATUS_USER_SHILED: 13,
  PB_STATUS_ILLEGAL_NAME: 14,
  PB_STATUS_FRIEND_EXCEEDED: 15,
  PB_STATUS_NAME_EXISTS: 16,
  PB_STATUS_INVALID_VERSION: 17,
  PB_STATUS_BATTLE_RECOVER: 18,
  PB_STATUS_RACE_NOT_PREPARED: 19,
  PB_STATUS_BATTLE_JOIN_NOT_ALLOWED: 20,
  PB_STATUS_BATTLE_WAIT: 21,
  PB_STATUS_CITY_FOCUSED: 22,
  PB_STATUS_ALREADY_IN_UNION: 23,
  PB_STATUS_UNION_CLOSED: 24,
  PB_STATUS_UNION_EXCEEDED: 25,
  PB_STATUS_NOT_IN_UNION: 26,
  PB_STATUS_PRIVILEGE_ERROR: 27,
  PB_STATUS_WAR_ENDED: 28,
  PB_STATUS_WAR_NOT_STARTED: 29,
  PB_STATUS_GIFT_CLAIMED: 30,
  PB_STATUS_GIFT_EXPIRED: 31,
  PB_STATUS_GIFT_INVALID: 32,
  PB_STATUS_CAMP_DEFEATED: 33,
  PB_STATUS_UNION_NOT_ENOUGH_POWER: 34,
  PB_STATUS_UNION_NAME_EXISTS: 35,
  PB_STATUS_BATTLE_NOT_ENDED: 36,
  PB_STATUS_USER_BAN_LOGIN: 37,
  PB_STATUS_UNION_APPLY_NOT_ALLOWED: 38,
  PB_STATUS_UNION_TAG_EXISTS: 39,
  PB_STATUS_LET_NOT_FOUND: 40,
  PB_STATUS_CO_LEADER_EXCEEDED: 41,
  PB_STATUS_INVALID_RESCUE: 42,
  PB_STATUS_ERROR_CONNECT_BATTLE_SERVER: 43,
  PB_STATUS_INVALID_TUTORIAL: 44,
  PB_STATUS_BATTLE_ALREADY_SHARED: 45,
  PB_STATUS_UNION_BOSS_LOCKED: 46,
  PB_STATUS_UNION_BOSS_UNLOCKED: 47,
  PB_STATUS_UNION_BOSS_FOCUSED: 48,
  PB_STATUS_UNION_JOIN_CD: 49,
  PB_STATUS_FUND_OWNED: 50,
  PB_STATUS_BATTLE_TIMEOUT: 51,
  PB_STATUS_BATTLE_NOT_ALLOWED: 52,
  PB_STATUS_ILLEGAL_INVITE_CODE: 53,
  PB_STATUS_GIFT_DUPLICATE: 54,
  PB_STATUS_MATCH_JOIN_NOT_ALLOWED: 55,
  PB_STATUS_MATCH_START_NOT_ALLOWED: 56,
  PB_STATUS_ERROR_CREATE_MATCH: 57,
  PB_STATUS_MASSWAR_JOIN_NOT_ALLOWED: 58,
  PB_STATUS_MASSWAR_KICKOUT_NOT_ALLOWED: 59,
  PB_STATUS_MASSWAR_TEAM_TROOP_LOCKED: 60,
  PB_STATUS_MASSWAR_NOT_IN_TEAM: 61,
  PB_STATUS_MASSWAR_ALREADY_IN_TEAM: 62,
  PB_STATUS_MASSWAR_TEAM_NOT_FULL: 63,
  PB_STATUS_MASSWAR_TROOP_NOT_FULL: 64,
  PB_STATUS_MASSWAR_CANNOT_LEAVE_TEAM: 65,
  PB_STATUS_UNOIN_TAG_TOO_LONG: 66,
  PB_STATUS_DARK_DUEL_CANCEL_MATCH: 67,
  PB_STATUS_PLAYER_CAN_NOT_RESEVICE_GIFT: 68,
  PB_UNION_MEMBER_IN_TEAM: 69,
  PB_STATUS_ROOM_RECONNECT: 70,
  PB_STATUS_SEASON_JOIN_NOT_ALLOWED: 71,
  PB_STATUS_SEASON_START_NOT_ALLOWED: 72,
  PB_STATUS_REPORT_UPPER_LIMIT: 73,
  PB_STATUS_USER_BAN_BATTLE: 74,
  PB_STATUS_HAS_LEND_CARD_IN_UNION: 75
};

/**
 * @enum {number}
 */
proto.SglMsg_pb.UserType = {
  PB_USER_CHAPTER: 1,
  PB_USER_PLAYER: 2,
  PB_USER_NPC: 3
};

/**
 * @enum {number}
 */
proto.SglMsg_pb.FocusStatus = {
  PB_FOCUS_SWEEP: 1,
  PB_FOCUS_ATTACK: 2,
  PB_FOCUS_CHALLENGE: 3,
  PB_FOCUS_RESCUE: 4,
  PB_FOCUS_LOCK: 5
};

/**
 * @enum {number}
 */
proto.SglMsg_pb.InviteStatus = {
  PB_INVITE_INVITED: 0,
  PB_INVITE_ACCEPTED: 1,
  PB_INVITE_REFUSED: 2,
  PB_INVITE_OK: 3
};

/**
 * @enum {number}
 */
proto.SglMsg_pb.ApplyStatus = {
  PB_APPLY_APPLIED: 0,
  PB_APPLY_ACCEPTED: 1,
  PB_APPLY_REFUSED: 2,
  PB_APPLY_OK: 3
};

/**
 * @enum {number}
 */
proto.SglMsg_pb.SosStatus = {
  PB_SOS_ISSUED: 0,
  PB_SOS_RESCUED: 1,
  PB_SOS_INVALID: 2,
  PB_SOS_OK: 3
};

goog.object.extend(exports, proto.SglMsg_pb);
